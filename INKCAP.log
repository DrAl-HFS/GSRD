
CUDA Driver Version:           9010
NVRM version:                  NVIDIA UNIX x86_64 Kernel Module  390.25  Wed Jan 24 20:02:43 PST 2018

Device Number:                 0
Device Name:                   GeForce GTX 970M
Device Revision Number:        5.2
Global Memory Size:            3171483648
Number of Multiprocessors:     10
Concurrent Copy and Execution: Yes
Total Constant Memory:         65536
Total Shared Memory per Block: 49152
Registers per Block:           65536
Warp Size:                     32
Maximum Threads per Block:     1024
Maximum Block Dimensions:      1024, 1024, 64
Maximum Grid Dimensions:       2147483647 x 65535 x 65535
Maximum Memory Pitch:          2147483647B
Texture Alignment:             512B
Clock Rate:                    1038 MHz
Execution Timeout:             No
Integrated Device:             No
Can Map Host Memory:           Yes
Compute Mode:                  default
Concurrent Kernels:            Yes
ECC Enabled:                   No
Memory Clock Rate:             2505 MHz
Memory Bus Width:              192 bits
L2 Cache Size:                 1572864 bytes
Max Threads Per SMP:           2048
Async Engines:                 2
Unified Addressing:            Yes
Managed Memory:                Yes
PGI Compiler Option:           -ta=tesla:cc50
src/gsrd.c:
summarise:
    107, Loop unrolled 2 times
main:
    140, Loop not vectorized/parallelized: contains call
    170, Loop not vectorized/parallelized: contains call
src/proc.c:
proc:
    139, Generating copyin(pP->pKRR[:pP->n],pP->pKRA[:pP->n],pP->pKDB[:pP->n],pO[:1])
         Generating copy(pR[:pO->n])
         Generating copyin(pS[:pO->n],pP[:1])
    146, Loop not vectorized/parallelized: contains call
    154, Accelerator kernel generated
         Generating Tesla code
        156, #pragma acc loop gang /* blockIdx.x */
        159, #pragma acc loop vector(128) /* threadIdx.x */
    156, Loop not fused: no successor loop
    159, Loop is parallelizable
         Loop not vectorized: data dependency
         FMA (fused multiply-add) instruction(s) generated
    172, laplace2D2S9P inlined, size=18 (inline) file src/proc.c (24)
    173, laplace2D2S9P inlined, size=18 (inline) file src/proc.c (24)
    193, Accelerator kernel generated
         Generating Tesla code
        195, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
    193, Generating implicit copy(wrap[:])
    195, Loop not fused: no successor loop
         Loop not vectorized: data dependency
         FMA (fused multiply-add) instruction(s) generated
    204, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    205, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    213, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    214, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    231, Accelerator kernel generated
         Generating Tesla code
        233, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
    231, Generating implicit copy(wrap[:])
    233, Loop not fused: no successor loop
         Loop not vectorized: data dependency
         FMA (fused multiply-add) instruction(s) generated
    241, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    242, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    250, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    251, laplace2D4S9P inlined, size=17 (inline) file src/proc.c (33)
    259, FMA (fused multiply-add) instruction(s) generated
    263, proc1 inlined, size=51 (inline) file src/proc.c (41)
    264, proc1 inlined, size=51 (inline) file src/proc.c (41)
    270, proc1 inlined, size=51 (inline) file src/proc.c (41)
    271, proc1 inlined, size=51 (inline) file src/proc.c (41)
src/data.c:
initParam:
     37, Loop unrolled 3 times (completely unrolled)
     52, Loop not fused: no successor loop
         Loop not vectorized: data dependency
         Loop unrolled 2 times
initBuff:
     69, Loop not vectorized: data dependency
         Loop unrolled 8 times
         Generated 2 prefetches in scalar loop
     72, Loop not vectorized/parallelized: not countable
src/util.c:
sc:
      9, Loop not vectorized/parallelized: potential early exits
     10, Loop not vectorized/parallelized: potential early exits
stripPath:
     24, Loop not vectorized/parallelized: not countable
scanVI:
     96, Loop not vectorized/parallelized: potential early exits
scanChZ:
    113, Loop not vectorized/parallelized: potential early exits
scanArgs:
    146, Loop not vectorized/parallelized: contains call
pgcc -fast -DLAPLACE_FUNCTION -Minfo=all -acc -ta=host,nvidia:cc50  -o gsrd.out src/gsrd.c src/proc.c src/data.c src/util.c
./gsrd.out "init/gsrd00000(1024,1024,2)F64.raw"
gsrd00000(1024,1024,2)F64.raw -> v[3]=(1024,1024,2,)*64
procInitAcc() - nNV=1, nH=1 (other=0)
initCtx() - 33579008 bytes @ 0x7fd2a17f8010
summarise() - 
	   min, max, sum
	A: 0, 1, 524770
	B: 0, 1, 524764
	tE= 2.87114, 2.87114
saveFrame() - raw/gsrd01000(1024,1024,2)F64.raw 0x7fd2a17fe010 0 bytes
summarise() - 
	   min, max, sum
	A: 0, 1, 524769
	B: 0, 2.42235, 524772
	tE= 2.85665, 5.72779
saveFrame() - raw/gsrd02000(1024,1024,2)F64.raw 0x7fd2a17fe010 0 bytes
summarise() - 
	   min, max, sum
	A: 0, 1, 524769
	B: 0, 2.42788, 524772
	tE= 2.85801, 8.5858
saveFrame() - raw/gsrd03000(1024,1024,2)F64.raw 0x7fd2a17fe010 0 bytes
summarise() - 
	   min, max, sum
	A: 0, 1, 524769
	B: 0, 2.40399, 524772
	tE= 2.85833, 11.4441
saveFrame() - raw/gsrd04000(1024,1024,2)F64.raw 0x7fd2a17fe010 0 bytes
summarise() - 
	   min, max, sum
	A: 0, 1, 524769
	B: 0, 2.40415, 524772
	tE= 2.85873, 14.3029
saveFrame() - raw/gsrd05000(1024,1024,2)F64.raw 0x7fd2a17fe010 0 bytes
Test PASSED
